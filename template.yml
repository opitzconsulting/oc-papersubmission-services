AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  Name:
    Type: String
    Description: an Name to create distinct ressources for every member
  SESRegion:
    Type: String
    Default: eu-west-1
    AllowedValues:
      - eu-west-1
      - us-east-1
      - us-west-2
    Description: Region in which SES service will be used

Resources:
  SlideRequest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: slide-requests/index.handler
      Runtime: nodejs6.10
      Role: !GetAtt SlideRequestLambdaRole.Arn
      Environment:
        Variables:
          SES_REGION: !Ref SESRegion
      Events:
        SlideRequestReceived:
          Type: S3
          Properties:
            Bucket: !Ref 'SlidesRequestsBucket'
            Events: s3:ObjectCreated:*


  SlideRequestLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['-', [!Ref 'AWS::StackName', 'Lambda']]
      AssumeRolePolicyDocument:
        Statement: [{Action: 'sts:AssumeRole', Effect: Allow, Principal: {Service: [lambda.amazonaws.com]}}]
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole'
      Path: /
      Policies:
        -
          PolicyName: LambdaWorkerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Action: ['logs:CreateLogGroup', 'logs:CreateLogStream', 'logs:PutLogEvents']
                Effect: Allow
                Resource: '*'
        -
          PolicyName: BucketPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Action: ['s3:GetObject']
                Effect: Allow
                Resource: !Join ['', ['arn:aws:s3:::', !Join ['.', [!Ref 'Name', !Ref 'AWS::AccountId', 'getslides', 'oc-papersubmission']], '/*']]
              -
                Action: ['s3:GetObject']
                Effect: Allow
                Resource: !Join ['', ['arn:aws:s3:::', !Ref 'SlidesBucket', '/*']]
        -
          PolicyName: SESPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Action: ['ses:SendEmail']
                Effect: Allow
                Resource: !Join [':', ['arn:aws:ses', !Ref 'SESRegion', !Ref 'AWS::AccountId' , 'identity/*']]


  SlidesBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['.', [!Ref 'Name', !Ref 'AWS::AccountId', 'slides', 'oc-papersubmission']]

  SlidesRequestsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Join ['.', [!Ref 'Name', !Ref 'AWS::AccountId', 'getslides', 'oc-papersubmission']]
# https://github.com/awslabs/serverless-application-model/issues/275
#      BucketEncryption:
#        ServerSideEncryptionConfiguration:
#          ServerSideEncryptionByDefault:
#            SSEAlgorithm: AES256
  SlidesRequestsBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Join ['.', [!Ref 'Name', !Ref 'AWS::AccountId', 'getslides', 'oc-papersubmission']]
      PolicyDocument:
        Statement:
          -
            Action:
              - "s3:PutObject"
            Effect: "Allow"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'SlidesRequestsBucket', '/*']]
            Principal:
              "Service": "ses.amazonaws.com"
            Condition:
              StringEquals:
                aws:Referer:
                  - Ref: 'AWS::AccountId'
