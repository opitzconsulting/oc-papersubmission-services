swagger: '2.0'
info:
  version: '1.0'
  title: "OC Papersubmission API"
  description: >
    The API for using the OC Papersubmission system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/
host:
    private-f2b62-ocpapersubmissionapi.apiary-mock.com
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /slides:
    post:
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SlideUploadLambdaFunction.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        # !!! Must be POST this is only for the Lambda Integration and it is important to use POST because the API -
        # Gateway must communicate with post requests with the Lambda Backend.
        httpMethod: "POST"
        type: "aws_proxy"
        responses: {}
      summary: Upload Slides
      description: >
        Handles the Form Data to upload a slide. Creates a S3 bucket and returns a signed
        URL for S3 to upload the binary file.
      # For CORS
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "Access-Control-Allow-Origin"
          in: "header"
          required: false
          type: "string"
          default: "*"
        - name: "form-data"
          in: "body"
          required: true
          schema:
            type: "object"
            items: 
              $ref: '#/definitions/SlidesUpload'
            example:
                { 
                  "emailKey": "JAX Das Api ist der King",
                  "description": "Die Folien für den Vortrag",
                }
      responses:
        200:
          description: >
            The signed URL that can be used to upload the binary file.
          schema:
            type: string
          examples:
            application/json: |
              { "uploadUrl": "http://someurl"}
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{statusCode:200}"
        type: "mock"
definitions:
  SlidesUpload:
     properties:
        emailKey:
          type: string
          description: The subject Key which can be used to request the slides per e-mail.
        description:
          type: string
          description: A short description for the slides.
# Don´t use examples in definitions ==> results in deployment error.
#    example:
#      question: 'Favourite programming language?'
#      choices: ['Swift', 'Python', 'Objective-C', 'Ruby']